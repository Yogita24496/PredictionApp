name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # Server build and test
    - name: Set up Node.js for server
      uses: actions/setup-node@v3
      with:
        node-version: 18
        working-directory: server
    
    - name: Install server dependencies
      run: npm install
      working-directory: server
    
    - name: Run server tests
      run: npm test
      working-directory: server
    
    # Client build and test
    - name: Set up Node.js for client
      uses: actions/setup-node@v3
      with:
        node-version: 18
        working-directory: client
    
    - name: Install client dependencies
      run: npm install
      working-directory: client
    
    - name: Run client tests
      run: npm test
      working-directory: client
    
    - name: Build client
      run: npm run build
      working-directory: client

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push server image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: server/Dockerfile
        push: true
        tags: your-docker-username/prediction-server:latest
    
    - name: Build and push client image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: client/Dockerfile
        push: true
        tags: your-docker-username/prediction-client:latest
    
    # Add deployment steps for your hosting provider here
    # For example, for AWS ECS, Heroku, etc.